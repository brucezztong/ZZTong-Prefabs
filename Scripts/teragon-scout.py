#!/usr/bin/python3

#######################################################################################
# Teragon wants POI information in a custom data file. The game keeps most of that
# information in an XML file. I want to put tags in the XML file for the rest. Then
# I should be able to have a script (this script) do the work to make Teragon's file.
#######################################################################################
# Usage 1: ./teragon-scout.py
# Usage 2: python3 teragon-scout.py

from datetime import datetime
import os
import re
import sys

#######################################################################################
# Assume the script was launched from the scripts folder.
#######################################################################################

currTimeStamp = datetime.now()

outputFileName = "../Teragon/ZZTong-Prefabs-Property-List.txt"
outputFile = open( outputFileName, "w" )

outputFile.write( "// --------------------------------------------------------------------------\n" )
outputFile.write( "// ZZTong-Prefabs\n" )
outputFile.write( "//\n" )
outputFile.write( "// This file ONLY specifies files contained within the ZZTong-Prefabs modlet.\n" )
outputFile.write( "// It does NOT contain specifications for Vanilla POIs.\n" )
outputFile.write( "//\n" )
outputFile.write( "// This file was generated by a script: teragon-scout.py\n" )
outputFile.write( "// Generation Timestamp: " + str(currTimeStamp) + "\n" )
outputFile.write( "// --------------------------------------------------------------------------\n" )

#######################################################################################
# Step 1 - Wilderness POIs
#######################################################################################

outputFile.write( "//\n" )
outputFile.write( "// ZZTong-Prefabs: Wilderness POIs\n" )
outputFile.write( "// POI name;distance to other POIs;biomes;regions;road;poi_duplicate_distance\n" )
outputFile.write( "//\n" )

#######################################################################################
# Loop through each POI in the specified directory...
#######################################################################################

dirName = "../Prefabs/POIs/"

for fileName in os.listdir( dirName ):
    if ( fileName.endswith( ".xml" ) ):

        #######################################################################################
        # Prepare to read/parse XML file...
        #######################################################################################

        poiName = fileName.rsplit( "." )[0]
        xmlFileName = open(dirName + "/" + fileName, "r")

        #######################################################################################
        # Gather data...
        #######################################################################################

        isWildernessPOI = False
        rotation = ""
        yoffset = ""
        size = ""
        allBiomes = "burnt,desert,forest,snow,wasteland"
        biome = ""
        region = "default"
        road = "gravel"
        duplicate = "500"

        for line in xmlFileName:
            if "name=\"Tags\"" in line:
                tags = re.findall( "value=\"(.*?)\"", line )[0]
                if "wilderness" in tags:
                    isWildernessPOI = True

                if "burnt" in tags:
                    biome = biome + ",burnt"

                if "desert" in tags:
                    biome = biome + ",desert"

                if "forest" in tags:
                    biome = biome + ",forest"

                if "snow" in tags:
                    biome = biome + ",snow"

                if "waste" in tags:
                    biome = biome + ",wasteland"

                biome = biome.replace( ",", "", 1 )

                if ( len(biome) == 0 ):
                    biome = allBiomes

            if "name=\"DuplicateRepeatDistance\"" in line:
                duplicate = re.findall( "value=\"(.*?)\"", line )[0]

            #if "name=\"RotationToFaceNorth\"" in line:
            #    rotation = re.findall( "value=\"(.*?)\"", line )[0]

            #if "name=\"YOffset\"" in line:
            #    yoffset = re.findall( "value=\"(.*?)\"", line )[0]

            #if "name=\"PrefabSize\"" in line:
            #    size = re.findall( "value=\"(.*?)\"", line )[0]
            #    size = size.replace( ",", ";" )
            #    size = size.replace( " ", "" )

        #######################################################################################
        # Save the results...
        #######################################################################################

        if ( isWildernessPOI == True ):
            print( "Wilderness POI File : " + fileName )
            outputFile.write( poiName )
            #outputFile.write( ";" + str(rotation) )
            #outputFile.write( ";" + str(yoffset) )
            #outputFile.write( ";" + size )
            outputFile.write( ";poi_distance:49" )                   # Distance Value (from other POIs)
            outputFile.write( ";biome:" + biome )
            outputFile.write( ";region:" + region )
            outputFile.write( ";road:" + road )
            outputFile.write( ";poi_duplicate_distance:" + duplicate )
            outputFile.write( "\n")

        #######################################################################################
        # Done with this XML file...
        #######################################################################################

        xmlFileName.close()

""" THE FOLLOWING IS UNUSED
#######################################################################################
# Step 2 - Non-Wilderness POIs
#######################################################################################

dirName = "../Prefabs/POIs/"

outputFile.write( "//\n" )
outputFile.write( "// ZZTong-Prefabs: Non-Wilderness POIs\n" )
outputFile.write( "// POI name;rotation;yoffset;x;y;z;alone\n" )
outputFile.write( "//\n" )

#######################################################################################
# Loop through each POI in the specified directory...
#######################################################################################

for fileName in os.listdir( dirName ):
    if ( fileName.endswith( ".xml" ) ):

        #######################################################################################
        # Prepare to read/parse XML file...
        #######################################################################################

        poiName = fileName.rsplit( "." )[0]
        xmlFileName = open(dirName + "/" + fileName, "r")

        #######################################################################################
        # Gather data...
        #######################################################################################

        settlementTags = [ "countrytown", "countryresidential", "oldwest",
            "commercial", "downtown", "industrial", "residential", "rural" ]
        isSettlementPOI = False
        rotation = ""
        yoffset = ""
        size = ""

        for line in xmlFileName:
            if "name=\"Tags\"" in line:
                tags = re.findall( "value=\"(.*?)\"", line )[0]

                for currTag in settlementTags:
                    if currTag in tags:
                        isSettlementPOI = True

            if "name=\"RotationToFaceNorth\"" in line:
                rotation = re.findall( "value=\"(.*?)\"", line )[0]

            if "name=\"YOffset\"" in line:
                yoffset = re.findall( "value=\"(.*?)\"", line )[0]

            if "name=\"PrefabSize\"" in line:
                size = re.findall( "value=\"(.*?)\"", line )[0]
                size = size.replace( ",", ";" )
                size = size.replace( " ", "" )

        #######################################################################################
        # Save the results...
        #######################################################################################

        if ( isSettlementPOI == True ):
            print( "City/Town POI File  : " + fileName )
            outputFile.write( poiName )
            #outputFile.write( ";" + str(rotation) )
            #outputFile.write( ";" + str(yoffset) )
            #outputFile.write( ";" + size )
            outputFile.write( ";alone" )
            outputFile.write( "\n")

        #######################################################################################
        # Done with this XML file...
        #######################################################################################

        xmlFileName.close()

#######################################################################################
# Step 3 - RWG Tiles
#######################################################################################

dirName = "../Prefabs/RWGTiles/"

outputFile.write( "//\n" )
outputFile.write( "// ZZTong-Prefabs: RWG Tiles\n" )
outputFile.write( "//\n" )

#######################################################################################
# Loop through each POI in the specified directory...
#######################################################################################

for fileName in os.listdir( dirName ):
    if ( fileName.endswith( ".xml" ) ):

        #######################################################################################
        # Prepare to read/parse XML file...
        #######################################################################################

        poiName = fileName.rsplit( "." )[0]
        xmlFileName = open(dirName + "/" + fileName, "r")

        #######################################################################################
        # Gather data...
        #######################################################################################

        isTile = False
        rotation = ""
        yoffset = ""
        size = ""

        for line in xmlFileName:
            if "name=\"Tags\"" in line:
                tags = re.findall( "value=\"(.*?)\"", line )[0]

                if "streettile" in tags:
                    isTile = True

            if "name=\"RotationToFaceNorth\"" in line:
                rotation = re.findall( "value=\"(.*?)\"", line )[0]

            if "name=\"YOffset\"" in line:
                yoffset = re.findall( "value=\"(.*?)\"", line )[0]

            if "name=\"PrefabSize\"" in line:
                size = re.findall( "value=\"(.*?)\"", line )[0]
                size = size.replace( ",", ";" )
                size = size.replace( " ", "" )

        #######################################################################################
        # Save the results...
        #######################################################################################

        if ( isTile == True ):
            print( "Tile File           : " + fileName )
            outputFile.write( poiName )
            outputFile.write( ";" + str(rotation) )
            outputFile.write( ";" + str(yoffset) )
            outputFile.write( ";" + size )
            outputFile.write( ";alone" )
            outputFile.write( "\n")

        #######################################################################################
        # Done with this XML file...
        #######################################################################################

        xmlFileName.close()

#######################################################################################
# Step 4 - Parts
#######################################################################################

dirName = "../Prefabs/Parts/"

outputFile.write( "//\n" )
outputFile.write( "// ZZTong-Prefabs: Parts\n" )
outputFile.write( "//\n" )

#######################################################################################
# Loop through each POI in the specified directory...
#######################################################################################

for fileName in os.listdir( dirName ):
    if ( fileName.endswith( ".xml" ) ):

        #######################################################################################
        # Prepare to read/parse XML file...
        #######################################################################################

        poiName = fileName.rsplit( "." )[0]
        xmlFileName = open(dirName + "/" + fileName, "r")

        #######################################################################################
        # Gather data...
        #######################################################################################

        isPart = False
        rotation = ""
        yoffset = ""
        size = ""

        for line in xmlFileName:
            if "name=\"Tags\"" in line:
                tags = re.findall( "value=\"(.*?)\"", line )[0]

                if "part" in tags:
                    isPart = True

            if "name=\"RotationToFaceNorth\"" in line:
                rotation = re.findall( "value=\"(.*?)\"", line )[0]

            if "name=\"YOffset\"" in line:
                yoffset = re.findall( "value=\"(.*?)\"", line )[0]

            if "name=\"PrefabSize\"" in line:
                size = re.findall( "value=\"(.*?)\"", line )[0]
                size = size.replace( ",", ";" )
                size = size.replace( " ", "" )

        #######################################################################################
        # Save the results...
        #######################################################################################

        if ( isPart == True ):
            print( "Part File           : " + fileName )
            outputFile.write( poiName )
            outputFile.write( ";" + str(rotation) )
            outputFile.write( ";" + str(yoffset) )
            outputFile.write( ";" + size )
            outputFile.write( ";alone" )
            outputFile.write( "\n")

        #######################################################################################
        # Done with this XML file...
        #######################################################################################

        xmlFileName.close()

END OF UNUSED """

#######################################################################################
# All Done
#######################################################################################

outputFile.close()

