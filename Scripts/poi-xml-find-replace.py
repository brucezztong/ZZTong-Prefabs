#!/usr/bin/python3

# ********************************************************************
# This code was initially generated by ChatGPT as part of a
# conversation about my specifications and about optimizations.
# Then the code was manually changed to handle further requirements.
# ********************************************************************
# Usage: python3 poi-xml-find-replace.py <Directory>
#
# The program will look for poi-xml-find-replace.csv in the current
# directory. This is a CSV file the specifies what old values should
# be replaced with which new values. Example:
#
# old-string,new-string
# part_zztong_tractor1, part_cbp_tractor
# part_zztong_tractor2, part_cbp_tractor
# part_zztong_tractor3, part_cbp_tractor
#
# If this were run on a Prefabs/POIs directory, it would change all
# occurrances of those three tractor parts to refer to a different
# tractor part in all of the XML files in that directory.
# ********************************************************************

import csv
import os
import sys

# ********************************************************************
# Given the contents of a file, replace the old with the new.
# ********************************************************************

def replace_string_in_file(contents, old_string, new_string):
    # Replace the old string with the new string
    new_contents = contents.replace(old_string, new_string)
    return new_contents

# ********************************************************************
# The list of old strings and new strings is found in a CSV file.
# ********************************************************************

def read_csv_file(csv_file):
    mappings = []
    with open(csv_file, "r") as f:
        reader = csv.reader(f)
        next(reader)  # Skip the header row
        for row in reader:
            old_string, new_string = row
            mappings.append((old_string, new_string))
    return mappings

# ********************************************************************
# Driver
# ********************************************************************

if __name__ == "__main__":
    # Check if directory path is provided
    if len(sys.argv) < 2:
        print("Usage: python3 poi-xml-find-replace.py <Directory>")
        print("Please provide the directory path as a command line argument.")
        sys.exit(1)

    # Directory containing the files
    directory = sys.argv[1]

    # CSV file containing the old and new strings
    csv_file = "poi-xml-find-replace.csv"

    # Read the mappings from the CSV file
    mappings = read_csv_file(csv_file)

    # Process each file in the directory
    for root, dirs, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)

            # Only process XML files
            if file_path.endswith(".xml"):
                print("File: " + file_path, end="")
                with open(file_path, "r") as f:
                    # Read the contents of the file
                    contents = f.read()
                    orig_contents = contents

                # Apply each change from the CSV to the file
                for old_string, new_string in mappings:
                    contents = replace_string_in_file(contents, old_string, new_string)

                # Write the updated contents back to the file
                if contents != orig_contents:
                    with open(file_path, "w") as f:
                        f.write(contents)
                    print( " ... CHANGED" )
                else:
                    print( "" )

    print("String replacement completed successfully.")

